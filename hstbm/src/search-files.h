/* search-files -- Perform specified search across one or more files.

   Given:
     - A runtime-ready pattern matcher (hstbm), that has incorporated
       an explicit pattern, pattern interpretation options such as
       case-insensitivity, and environment selections such as locale;
     - A list of one or more files to search, collated and/or
       generated by the calling framework; and
     - Search and output options (e.g. line count, filename output,
       stop upon first match) selections:

   Perform the specified search on the files in order, and deal with
   matches according to the options (e.g. stop on first match if
   that's sufficent to satisfy the caller's request).

   This module is part of the "hstbm" demonstration program.  It
   *does not* handle anywhere near the sophistication of a full grep
   program; just a handful of the massive deficiencies include:
   - No line number and/or byte offset output;
   - No output colour options for match, filename etc;
   - No before/after context;
   - No directory-enumeration capability;
   - No inverted matching;
   - No binary file detection/forcing/text forcing;
   - No line-by-line file read operation;
   - No intelligence regarding reading from files that are
     concurrently being written while being searched (e.g. log
     files); and
   - No MS-DOS support.

   Notice also that the above list only relates to file handling and
   output control; it does not include deficiencies that arise
   elsewhere (e.g. the regular expression language supported by hstbm
   is more like a "fgrep with classes" than a proper regular
   expression matcher).  Locale (a.k.a. wide characters) is another
   area that is not handled (variable-length character encodings that
   include illegal sequences are not suitable, and the code assumes
   that only unibyte locales are tenable; it may be possible to relax
   this assumption for some fixed-length multibyte (e.g. two-octet)
   locales).

   Assertions are used in multiple places where a user-friendly
   program should behave in a more orderly fashion; this is mainly
   due to the significant differences between this demonstration
   program and what a normal user might expect:  The assertions warn
   the user that reasonable expectations might not apply here.

   All the above choices are deliberate:  We want this demonstration
   program to focus on the strengths and weaknesses of the hstbm
   algorithm and/or implementation relative to other grep programs,
   and so focus on providing only the essential or most highly
   convenient components here.  There is a significant risk that
   this code does not live up to its requirements; please accept my
   apologies in this case; hopefully any such discrepancies are
   minor.
*/

/* Copyright (C) 1992, 1997-2002, 2004-2015 Free Software Foundation,
   Inc.
   Copyright (C) 2015 Grouse Software

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc.,
   51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA */

/* This code is, to a significant extent, based on the code in GNU
   Grep, especially the infrastructure code in grep.c, which has the
   attribution:
        Written July 1992 by Mike Haertel.
   Many others have contributed to the sources.  See the files AUTHORS
   and THANKS, as well as the git changelog, in the GNU Grep package
   for details.

   This variant was created in 2014-2015 by behoffski (Brenton Hoff)
   of Grouse Software.  */

#ifndef SEARCH_FILES_H
#define SEARCH_FILES_H 1

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <stdbool.h>
#include <stdlib.h>
#include "hstbm.h"
#include "tristate.h"

/* Collect options into a struct so we can pass them between functions
   easily and efficiently.  */
typedef struct search_files_options_struct
{
  /* Filename to use if prefixing matches with the filename.  This may
     differ from the filename used elsewhere, for example if we are
     searching standard input.  */
  char *filename;

  bool show_byte_offset;
  bool count_lines;
  bool show_lines;
  tristate_t show_filename;
  char filename_terminator;

  /* ?? int before_context_lines;  */
  /* ?? int after_context_lines;  */
  /* ?? bool prefix_show_line_nrs;  */

  /* ?? bool match_only;  */
  /* ?? size_t per_file_maximum_match_count;  */

  /* ?? bool colourise_output;  */
  /* ?? More detailed breakdown on how to colourise the output?  */
} search_files_options_t;

/* Perform search on specified file list.  The return code
   summarises the outcome of the request:  For grep-family programs,
   this will probably be used as the exit value
   (success/failure/trouble) of the program.  */
extern int
search_files_exec (hstbm_context_t *hstbm,
                   search_files_options_t *file_opt,
                   int files_argc,
                   char *files_argv[]);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* SEARCH_FILES_H */
/* vim:set shifwidth=2: */
