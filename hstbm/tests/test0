#!/bin/sh

# test0 -- Push the regression test rig around a little

./regression.rig "$0" <<EOF

# This file is a bash script, and various Bash features can be used
# in constructing the contents of each line.  One initial feature
# is that blank lines, and lines starting with # (ignoring
# any preceding whitespace) are ignored.

# Each test start with a Section header, which is a Lua function
# call, with named parameters to the call captured in a {} table.
# All following lines within that section are test specifications
# with a layout specified in the section header.  Typically,
# multiple tests are packed into each field, with a user-selectable
# delimiter between items (the default delimiter is ':').  The
# tests try to especially probe completeness and boundary/edge
# cases, e.g. that a match for "[2-48]" matches 2, 3, 4, and 8,
# but doesn't match any of 1, 5, 7 or 9.

# At least initially, the boundary checking is biased towards ASCII;
# EBCDIC should also be checked, but my resources are limited.

#--[[
# NOTE: Nearly all files in hstbm are derived from GNU Grep, and so
# are owned by the FSF and have GPL3 license; however, a few files,
# heavily dependent on Lua and created independently of GNU Grep, are
# owned by Grouse Software, and have the MIT License in order to be
# compatible with the Lua ecosystem.  Any file not explicitly marked
# is intended to be FSF-owned and GPL3-licensed.
#
# This file (test0) is licensed under the MIT License.
# --]]

# --[[
# Copyright (c) 2014-2015 Grouse Software
# Written by behoffski (Brenton Hoff).

# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --]]

#### test0:
#### ALL The following tests should fail, and the diagnostics of
#### the test rig, particularly "Unescape", should show that the
#### escape sequences were converted correctly.


Section{"1-Char Escapes", Layout = {Pattern, XFailShow}}
== "_\a:_\b:_\f:_\r:_\t:_\v:_\\\\:_\':_\?:_\\""

# 1-digit octal codes, should be converted into control chars
Section{"1-Char Octal Escapes", Layout = {Pattern, XFailShow}}
== "_\0:_\1:_\2:_\3:_\4:_\5:_\6:_\7"

# 2-Digit octal codes
Section{"2-Digit Octal Escapes", Layout = {Pattern, XFailShow}}
== "\
_\00:_\01:_\02:_\03:_\04:_\05:_\06:_\07:\
_\10:_\11:_\12:_\13:_\14:_\15:_\16:_\17:\
_\20:_\21:_\22:_\23:_\24:_\25:_\26:_\27:\
_\30:_\31:_\32:_\33:_\34:_\35:_\36:_\37:\
_\40:_\41:_\42:_\43:_\44:_\45:_\46:_\47:\
_\50:_\51:_\52:_\53:_\54:_\55:_\56:_\57:\
_\60:_\61:_\62:_\63:_\64:_\65:_\66:_\67:\
_\70:_\71:_\72:_\73:_\74:_\75:_\76:_\77"

Section{"Some 3-Digit Octal Escapes", Layout = {Pattern, XFailShow}}
== "\
_\000:_\001:_\002:_\003:_\004:_\005:_\006:_\007:\
_\010:_\011:_\012:_\013:_\014:_\015:_\016:_\017:\
_\020:_\021:_\022:_\023:_\024:_\025:_\026:_\027:\
_\030:_\031:_\032:_\033:_\034:_\035:_\036:_\037:\
_\040:_\041:_\042:_\043:_\044:_\045:_\046:_\047:\
_\050:_\051:_\052:_\053:_\054:_\055:_\056:_\057:\
_\060:_\061:_\062:_\063:_\064:_\065:_\066:_\067:\
_\070:_\071:_\072:_\073:_\074:_\075:_\076:_\077"

== "\
_\300:_\301:_\302:_\303:_\304:_\305:_\306:_\307:\
_\310:_\311:_\312:_\313:_\314:_\315:_\316:_\317:\
_\320:_\321:_\322:_\323:_\324:_\325:_\326:_\327:\
_\330:_\331:_\332:_\333:_\334:_\335:_\336:_\337:\
_\340:_\341:_\342:_\343:_\344:_\345:_\346:_\347:\
_\350:_\351:_\352:_\353:_\354:_\355:_\356:_\357:\
_\360:_\361:_\362:_\363:_\364:_\365:_\366:_\367:\
_\370:_\371:_\372:_\373:_\374:_\375:_\376:_\377"

# Non-octal codes, should not participate and/or prematurely terminate
# any preceding octal sequence.  Note that "\8" and "\9" follow the
# behaviour of coreutils printf, e.g. "\\8" and "\\9".
Section{"89-Truncated Octal Escapes", Layout = {Pattern, XFailShow}}
== "_\8:_\9"
== "_\08:_\09:_\18:_\19:_\28:_\29:_\68:_\69:_\78:_\79"
== "_\008:_\009:_\018:_\019:_\028:_\029:_\068:_\069:_\078:_\079"

Section{"1-char Hexadecimal Escapes", Layout = {Pattern, XFailShow}}
== "\
_\x0:_\x1:_\x2:_\x3:_\x4:_\x5:_\x6:_\x7:_\x8:_\x9:_\xa:_\xb:_\xc:_\xd:_\xe:_\xf:_\xA:_\xB:_\xC:_\xD:_\xE:_\xF"
== "\
_\x0g:_\x1G:_\x2g:_\x3G:_\x4g:_\x5G:_\x6g:_\x7G:_\x8g:_\x9G:_\xag:_\xbG:_\xcg:_\xdG:_\xeg:_\xfG:_\xAg:_\xBG:_\xCg:_\xDG:_\xEg:_\xFG"

Section{"2-char Hexadecimal Escapes", Layout = {Pattern, XFailShow}}
== "\
_\x00:_\x01:_\x02:_\x03:_\x04:_\x05:_\x06:_\x07:\
_\x08:_\x09:_\x0a:_\x0b:_\x0c:_\x0d:_\x0e:_\x0f:\
_\x0A:_\x0B:_\x0C:_\x0D:_\x0E:_\x0F"
== "\
_\x10:_\x11:_\x12:_\x13:_\x14:_\x15:_\x16:_\x17:\
_\x18:_\x19:_\x1a:_\x1b:_\x1c:_\x1d:_\x1e:_\x1f:\
_\x1A:_\x1B:_\x1C:_\x1D:_\x1E:_\x1F"
== "\
_\xe0:_\xE1:_\xe2:_\xe3:_\xE4:_\xE5:_\xe6:_\xE7:\
_\xE8:_\xe9:_\xEa:_\xEb:_\xec:_\xed:_\xEe:_\xef:\
_\xeA:_\xEB:_\xeC:_\xeD:_\xEE:_\xEF"
== "\
_\xf0:_\xF1:_\xf2:_\xf3:_\xF4:_\xF5:_\xf6:_\xF7:\
_\xF8:_\xf9:_\xFa:_\xFb:_\xfc:_\xfd:_\xFe:_\xff:\
_\xFA:_\xfB:_\xfC:_\xFD:_\xFE:_\xFF"

Section{"Back-to-back assorted escape sequences", Layout = {Pattern, XFailShow}}
== "\3\xe\034\r\xabab\t\22\f\x:\x0\x1\x2\x3\4\5\6\7:\400\401\402"

# Check that a delimiter can appear in test text if it's formatted as
# an escape code (the parser only uses delim if it's in plain text).
Section{": delim and escapes", Layout = {Pattern, XFailShow}}
== "a\071b:c\072d:e\073f:g\x39h:i\x3aj:k\x3bl:w\72x:\71\72\73"

Section{"| delim and escapes", Delim="|", Layout = {Pattern, XFailShow}}
== "a\173b|c\174d|e\175f|g\x7bh|i\x7cj|k\x7dl|\x7b\x7c\x7d"

EOF

